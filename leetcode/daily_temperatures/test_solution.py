import pytest

from leetcode_py import logged_test

from .helpers import assert_daily_temperatures, run_daily_temperatures
from .solution import Solution


class TestDailyTemperatures:
    def setup_method(self):
        self.solution = Solution()

    @logged_test
    @pytest.mark.parametrize(
        "temperatures, expected",
        [
            ([73, 74, 75, 71, 69, 72, 76, 73], [1, 1, 4, 2, 1, 1, 0, 0]),
            ([30, 40, 50, 60], [1, 1, 1, 0]),
            ([30, 60, 90], [1, 1, 0]),
            ([89, 62, 70, 58, 47, 47, 46, 76, 100, 70], [8, 1, 5, 4, 3, 2, 1, 1, 0, 0]),
            ([55, 38, 53, 81, 61, 93, 97, 32, 43, 78], [3, 1, 1, 2, 1, 1, 0, 1, 1, 0]),
            ([34, 80, 80, 34, 34, 80, 80, 80, 80, 34], [1, 0, 0, 2, 1, 0, 0, 0, 0, 0]),
            ([73], [0]),
            ([100], [0]),
            ([30, 31, 32, 33, 34], [1, 1, 1, 1, 0]),
            ([90, 80, 70, 60, 50], [0, 0, 0, 0, 0]),
            ([50, 50, 50, 50], [0, 0, 0, 0]),
            ([30, 100, 30, 100], [1, 0, 1, 0]),
            ([75, 71, 69, 72, 76], [4, 2, 1, 1, 0]),
            ([40, 35, 32, 37, 50], [4, 2, 1, 1, 0]),
            ([30, 40, 50, 60, 70, 80, 90, 100], [1, 1, 1, 1, 1, 1, 1, 0]),
            ([30, 30], [0, 0]),
            ([100, 100], [0, 0]),
            ([30, 100], [1, 0]),
            ([100, 30], [0, 0]),
            ([30, 31, 100], [1, 1, 0]),
            ([30, 99, 100], [1, 1, 0]),
            ([50, 40, 60, 30, 70], [2, 1, 2, 1, 0]),
            ([60, 50, 70, 40, 80], [2, 1, 2, 1, 0]),
            ([40, 50, 60, 50, 40], [1, 1, 0, 0, 0]),
            ([30, 40, 50, 40, 30], [1, 1, 0, 0, 0]),
            ([60, 50, 40, 50, 60], [0, 3, 1, 1, 0]),
            ([70, 60, 50, 60, 70], [0, 3, 1, 1, 0]),
            ([45, 50, 40, 60, 55, 65], [1, 2, 1, 2, 1, 0]),
            ([35, 45, 30, 50, 40, 60], [1, 2, 1, 2, 1, 0]),
            ([30, 31, 32, 33, 34, 35, 36, 37, 38, 39], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0]),
            ([50, 49, 48, 47, 46, 45, 44, 43, 42, 41], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
            ([40, 40, 50, 50, 60, 60], [2, 1, 2, 1, 0, 0]),
            ([60, 60, 50, 50, 40, 40], [0, 0, 0, 0, 0, 0]),
            ([30, 31, 30, 32], [1, 2, 1, 0]),
            ([99, 100, 99, 100], [1, 0, 1, 0]),
        ],
    )
    def test_daily_temperatures(self, temperatures: list[int], expected: list[int]):
        result = run_daily_temperatures(Solution, temperatures)
        assert_daily_temperatures(result, expected)
