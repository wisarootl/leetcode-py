{
    // Basic problem info
    question_name: "two_sum", // snake_case folder name
    class_name: "TwoSum", // PascalCase class name
    method_name: "two_sum", // snake_case method name
    problem_number: "1", // LeetCode problem number
    problem_title: "Two Sum", // Display title
    difficulty: "Easy", // Easy/Medium/Hard
    topics: "Array, Hash Table", // Comma-separated topics
    tags: ["grind-75"], // Array of tags

    // Problem content
    problem_description: "Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.",
    examples: [
        {
            input: "nums = [2,7,11,15], target = 9",
            output: "[0,1]",
        },
        {
            input: "nums = [3,2,4], target = 6",
            output: "[1,2]",
        },
    ],
    constraints: "- 2 <= nums.length <= 10^4\n- -10^9 <= nums[i] <= 10^9",

    // Method signature
    parameters: "nums: list[int], target: int", // Method parameters with types
    return_type: "list[int]", // Return type annotation
    imports: "", // Additional imports (e.g., "from leetcode_py.tree_node import TreeNode")

    // Test cases
    test_cases: [
        {
            args: [[2, 7, 11, 15], 9], // Method arguments
            expected: [0, 1], // Expected result
        },
        {
            args: [[3, 2, 4], 6],
            expected: [1, 2],
        },
    ],

    // Test template variables (auto-generated, can be customized)
    param_names: "nums, target, expected",
    param_names_with_types: "nums: list[int], target: int, expected: list[int]",
    input_description: "nums={nums}, target={target}",
    input_params: "nums, target",
    expected_param: "expected",
    method_args: "nums, target",
    test_input_setup: "nums = [2, 7, 11, 15]\ntarget = 9",
    expected_output_setup: "expected = [0, 1]",
    assertion_code: "assert result == expected",
}
