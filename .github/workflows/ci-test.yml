name: ci

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    test:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

            - name: Set up Python
            - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
              with:
                  python-version: "3.13"

            - name: Install Poetry
              uses: snok/install-poetry@76e04a911780d5b312d89783f7b1cd627778900a # v1.4.1
              with:
                  virtualenvs-create: true
                  virtualenvs-in-project: true
                  installer-parallel: true

            - name: Load cached venv
              id: cached-poetry-dependencies
              uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
              with:
                  path: .venv
                  key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

            - name: Install dependencies
              if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
              run: poetry install --no-interaction --no-ansi

            - name: Run tests
              run: make test

            - name: SonarQube Scan
              uses: SonarSource/sonarqube-scan-action@8c71dc039c2dd71d3821e89a2b58ecc7fee6ced9 # v5.3.0
              env:
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

            - name: Upload coverage reports to Codecov
              uses: codecov/codecov-action@fdcc8476540edceab3de004e990f80d881c6cc00 # v5.5.0
              with:
                  fail_ci_if_error: true
                  token: ${{ secrets.CODECOV_TOKEN }}
                  verbose: true
